{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifsExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","gif","GifsExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAsCC,mBAAU,IAAhD,mBAAQC,EAAR,KAAoBC,EAApB,KAqBA,OACI,sBAAMC,SAdW,SAAEC,GAEnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAe,MAOnB,SAEI,uBAEIO,KAAM,OACNC,MAAUT,EACVU,SA1Bc,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,sCCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAWH,GAFnD,+DAIII,MAAOF,GAJX,cAITG,EAJS,gBAMQA,EAAKC,OANb,uBAMPC,EANO,EAMPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAgBRM,GAhBQ,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UAEI,qBAAKA,UAAU,oCAAoCC,IAAQf,EAAMgB,IAAQN,IACzE,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA4Bd,mBAAS,CAEjCqB,KAAM,GACNa,SAAS,IAHb,mBAAQC,EAAR,KAAeC,EAAf,KA2BA,OApBAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CAELf,KAAMkB,EACNL,SAAS,MAId,UAIP,CAAEpB,IAECqB,ED1BoBM,CAAc3B,GAAjCO,EAAR,EAAQA,KAAOa,EAAf,EAAeA,QAEf,OACI,sBAAKJ,UAAU,YAAf,UAGQI,GAAW,oBAAIJ,UAAU,mCAAd,wBAGf,mCAAOhB,EAAP,OAGQO,EAAKE,KAAK,SAAAmB,GAAG,OACT,cAAC,EAAD,eAESA,GADGA,EAAIjB,WEhB3BkB,EAAgB,WAEzB,MAAsC3C,mBAAS,CAAE,qBAAjD,mBAAQ4C,EAAR,KAAoB7C,EAApB,KAaA,OACI,gCAEI,oBAAI+B,UAAU,wCAAd,6BACA,cAAC,EAAD,CAAa/B,cAAkBA,IAC/B,uBAEA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAaA,GADPA,YCxBlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad1fc167.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [ inputValue, setInputValue ] = useState( '' ); // useSate(); es undefine.\n\n    const handleInputChange = ( e ) => {\n\n        setInputValue( e.target.value );\n\n    };\n\n    const handleSubmit = ( e ) => {\n\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue( '' );\n\n        };\n\n    };\n\n    return (\n        <form onSubmit = { handleSubmit }>\n\n            <input\n            \n                type ='text'\n                value = { inputValue }\n                onChange = { handleInputChange }\n\n            />\n\n        </form>\n    );\n\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","\nexport const getGifs = async( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=21&api_key=xZBI3dcgZuWIn2VcRU1ZXw5bvmXR8FP8`;\n\n        const resp = await fetch( url );\n\n        const { data } = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            };\n        });\n\n        return gifs;\n\n    };","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className='card'>\n\n            <img className='animate__animated animate__zoomIn' src = { url } alt = { title } />\n            <p> { title } </p>\n\n        </div>\n    );\n\n};","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ( { category } ) => {\n\n    const { data , loading } = useFetchGifs( category );\n\n    return (\n        <div className='card-grid'>\n\n            {\n                loading && <h4 className='animate__animated animate__pulse'>Loading...</h4>\n            }\n\n            <h3> { category } </h3>\n\n                {\n                    data.map( gif => (\n                        <GifGridItem \n                            key = { gif.id }\n                            { ...gif } \n                        />\n                        \n                    ))\n                }\n\n        </div>\n    );\n\n};","import { useEffect, useState } from \"react/cjs/react.development\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [ state, setState ] = useState({\n\n        data: [],\n        loading: true\n\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n        .then( imgs => {\n\n            setTimeout( () => {\n\n                setState({\n\n                    data: imgs,\n                    loading: false\n\n                });\n\n            }, 1000 );\n\n        })\n\n    } , [ category ] );\n\n    return state\n\n};","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifsExpertApp = () => {\n\n    const [ categories, setCategories ] = useState([ 'Kimetsu No Yaiba' ]);\n\n//     const handleAdd = () => {\n\n        // Opcion 1.\n        // setCategories( [ ...categories, 'Inuyasha' ] );\n\n        // Opcion 2.\n//         setCategories( cats => [ ...cats, 'Inuyasha' ] );\n\n//     };\n\n\n    return (\n        <div>\n\n            <h2 className='animate__animated animate__backInDown'>Gifs Expert App</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        \n                        <GifGrid \n                            key={ category }\n                            category = { category } \n                        />\n                    ))\n                }\n            </ol>\n\n        </div>\n    );\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GifsExpertApp } from './GifsExpertApp';\n\nReactDOM.render(\n    <GifsExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}